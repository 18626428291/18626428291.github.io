---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'
const frontmatter = {
  title: 'ripple'
}

const headings = []
---

<script>
  const buttonRef = document.getElementById('buttonRef')
  const circle = {
    radius: 0,
    width: 0,
    height: 0,
    offsetY: 0,
    offsetX: 0
  }
  const scale = 2
  function findRadius<T extends number>(a: T, b: T, x: T, y: T) {
    // 假设点的坐标为 (x, y)，长方形左上角顶点坐标为 (0, 0)
    let topLeftDistance = Math.sqrt(x * x + y * y)
    let topRightDistance = Math.sqrt((a - x) * (a - x) + y * y)
    let bottomLeftDistance = Math.sqrt(x * x + (b - y) * (b - y))
    let bottomRightDistance = Math.sqrt((a - x) * (a - x) + (b - y) * (b - y))
    return Math.max(
      topLeftDistance,
      topRightDistance,
      bottomLeftDistance,
      bottomRightDistance
    )
  }

  function createRipple(el: HTMLElement) {
    const container = document.createElement('span')
    container.className = 'ripple-container'
    const animation = document.createElement('span')
    // 指定top left 和 宽度
    animation.style.width = `${circle.radius * 2}px`
    animation.style.height = `${circle.radius * 2}px`
    animation.style.top = `${circle.offsetY}px`
    animation.style.left = `${circle.offsetX}px`
    animation.className = 'ripple-animate'

    container.appendChild(animation)
    setTimeout(() => {
      animation.style.transform = `scale(${scale})`
      setTimeout(() => {
        animation.style.opacity = 0
      }, 400)
    }, 0)
    el.appendChild(container)
  }

  function onclick(e: MouseEvent, el: HTMLElement) {
    const { offsetX, offsetY } = e
    const { width, height } = el.getBoundingClientRect()
    circle.radius = findRadius(width, height, offsetX, offsetY)
    circle.offsetX = offsetX - circle.radius
    circle.offsetY = offsetY - circle.radius
    console.log(
      `圆心:(${offsetX},${offsetY}),中心:(${width / 2},${height / 2}),半径:${circle.radius},偏移:(${circle.offsetX},${circle.offsetY})`
    )

    createRipple(el)
  }
  if (buttonRef) {
    buttonRef.addEventListener('click', (e: MouseEvent) => {
      while (buttonRef.firstChild) {
        buttonRef.removeChild(buttonRef.firstChild)
      }
      onclick(e, buttonRef)
    })
  }
</script>
<StarlightPage frontmatter={frontmatter} headings={headings}>
  <section class='w-full h-full flex justify-center items-center'>
    <button id='buttonRef' class='rounded w-200px h-100px relative b-0'>
      asdas
      <span class='ripple-container'>
        <span class='ripple-animate'></span>
      </span>
    </button>
  </section>
</StarlightPage>
<style is:global>
  .ripple-container {
    position: absolute;
    overflow: hidden;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  .ripple-animate {
    position: absolute;
    background-color: rgba(16, 15, 15, 0.1);
    border-radius: 50%;
    transform: scale(0);
    /* width: 100px;
    height: 100px; */
    top: 0;
    left: 0;
    transition: transform 0.5s ease-out;
    opacity: 1;
  }
  button:active .ripple-animate {
    transform: scale(2);
    opacity: 1;
  }
</style>
